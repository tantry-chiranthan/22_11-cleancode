[10:01] K, Bhuvan
review1.cs

int d; // elapsed time in days
 
int elapsedTimeInDays

************************************************************************

review2.cs

var dataFromDb = db.GetFromService().ToList(); // Get List of employees
 
var employeeList = employeeService.GetEmployeeList();

************************************************************************

review3.cs

int iCounter;

string strFullName;

DateTime dModifiedDate;
 
int counter

string fullName;

DateTime modifiedDate;

************************************************************************

review4.cs

public bool IsShopOpen(string pDay, int pAmount)

{

    // some logic

}
 
public bool IsShopOpen(string Day, int Amount)

{

    // some logic

}

************************************************************************

review5.cs

const int DAYS_IN_WEEK = 7;

const int daysInMonth = 30;
 
var songs = new List<string> { 'Back In Black', 'Stairway to Heaven', 'Hey Jude' };

var Artists = new List<string> { 'ACDC', 'Led Zeppelin', 'The Beatles' };
 
bool EraseDatabase() {}

bool Restore_database() {}
 
class animal {}

class Alpaca {}
 
const int DAYS_IN_WEEK = 7;

const int DAYS_IN_MONTH = 30;
 
var songs = new List<string> { 'Back In Black', 'Stairway to Heaven', 'Hey Jude' };

var artists = new List<string> { 'ACDC', 'Led Zeppelin', 'The Beatles' };
 
bool EraseDatabase() {}

bool RestoreDatabase() {}
 
class Animal {}

class Alpaca {}

************************************************************************

review6.cs

public class Employee

{

    public Datetime sWorkDate { get; set; } // get set Start Working Date

    public Datetime modTime { get; set; } // get set Modification Time

}
 
public class Employee

{

    public Datetime startWorkDate { get; set; } // get set Start Working Date

    public Datetime modificationTime { get; set; } // get set Modification Time

}

************************************************************************

review7.cs

var employeephone;
 
public double CalculateSalary(int workingdays, int workinghours)

{

    // some logic

}
 
var employeePhone;
 
public double CalculateSalary(int workingDays, int workingHours)

{

    // some logic

}

************************************************************************
[10:02] K, Bhuvan
review1.cs

public bool IsShopOpen(string day)

{

    if (!string.IsNullOrEmpty(day))

    {

        day = day.ToLower();

        if (day == "friday")

        {

            return true;

        }

        else if (day == "saturday")

        {

            return true;

        }

        else if (day == "sunday")

        {

            return true;

        }

        else

        {

            return false;

        }

    }

    var openingDays = new[] {"friday", "saturday", "sunday"};

    return openingDays.Any(day=>day==day.ToLower());

    else

    {

        return false;

    }
 
}
 
public bool IsShopOpen(string day)

{

    if (string.IsNullOrEmpty(day))

    {

       return false;

    }

    var openingDays = new[] {"friday", "saturday", "sunday"};

    return openingDays.Any(day=>day==day.ToLower());

}

******************************************************************

review3.cs

public long Fibonacci(int n)

{

    if (n < 50)

    {

        if (n != 0)

        {

            if (n != 1)

            {

                return Fibonacci(n - 1) + Fibonacci(n - 2);

            }

            else

            {

                return 1;

            }

        }

        else

        {

            return 0;

        }

    }

    else

    {

        throw new System.Exception("Not supported");

    }

}
 
public long Fibonacci(int n)

{

    if (n >= 50)

    {

        throw new System.Exception("Not supported");

    }

    if(n!=0 || n!=1)

    {

        return 1;

    }

    return Fibonacci(n-1) + Fibonacci(n-2);

}

******************************************************************

review4.cs

var l = new[] { "Austin", "New York", "San Francisco" };
 
for (var i = 0; i < l.Count(); i++)

{

    var li = l[i];

    DoStuff();

    DoSomeOtherStuff();
 
    // ...

    // ...

    // ...

    // Wait, what is `li` for again?

    Dispatch(li);

}
 
var CityNameList = new[] { "Austin", "New York", "San Francisco" };
 
for (var i = 0; i < l.Count(); i++)

{

    var CityName = l[i];

    DoStuff();

    DoSomeOtherStuff();
 
    // ...

    // ...

    // ...

    // Wait, what is `li` for again?

    Dispatch(li);

}

******************************************************************

review5.cs

if (userRole == 8) // Check if Admin 

{

}
 
const int ADMIN = 8

if(userRole == ADMIN)

{
 
}

******************************************************************

review6.cs

public class Car

{

    public string CarMake { get; set; }

    public string CarModel { get; set; }

    public string CarColor { get; set; }
 
    //...

}
 
public class Car

{

    public string Make { get; set; }

    public string Model { get; set; }

    public string Color { get; set; }
 
    //...

}

******************************************************************  

review7.cs

var ymdstr = DateTime.UtcNow.ToString("MMMM dd, yyyy");
 
var Date = DateTime.UtcNow.ToString("MMMM dd, yyyy");

******************************************************************

review9.cs

public void CreateMicrobrewery(string name = null)

{

    var breweryName = !string.IsNullOrEmpty(name) ? name : "Hipster Brew Co.";

    // ...

}
 
public void CreateMicrobrewery(string name = "Hipster Brew Co.")

{

}
